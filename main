repeat wait() until game:IsLoaded()
if _G.BaseChoice == "Military Base" then
_G.BaseNumber = 1
elseif _G.BaseChoice == "Drone Base" then
_G.BaseNumber = 2
elseif _G.BaseChoice == "Nuke Base" then
_G.BaseNumber = 3
end
loadstring(game:HttpGet('https://raw.githubusercontent.com/micorockslol123/idek/main/nullsecurity'))()
loadstring(game:HttpGet('https://raw.githubusercontent.com/micorockslol123/idek/main/nullwhitelist'))()
game.Players.LocalPlayer.PlayerGui.BaseUI.Enabled = false
local args = {
    [1] = _G.BaseNumber
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_knit@1.5.1").knit.Services.TycoonService.RF.SetBase:InvokeServer(unpack(args))
wait(0.5)
local args = {
    [1] = "USA"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_knit@1.5.1").knit.Services.TycoonService.RF.Select:InvokeServer(unpack(args))
local ContextActionService = game:GetService("ContextActionService")

local ButtonsBlacklist = {
	"AttackHusky",
	"AutoCollect",
	"DoubleCash",
	"SuperSoldier"
}

local Selection = game

local Player = game.Players.LocalPlayer

local character = Player.Character
local humanoid = character:WaitForChild("Humanoid")

local Mouse = Player:GetMouse()

local UserInputService = game:GetService("UserInputService")
_G.AutoBuy = false
_G.AutoCollect = false
_G.AutoRebirth = false
_G.KillAura = false
_G.AutoEvent = false
_G.BankRob = false
_G.AutoCrate = false
_G.KillPlayers = false
_G.KillNpcs = false
_G.KillAll = false
local CrateFound = false
local CratePos

local Iterations = 0

local PlayerTycoons = game.Workspace:FindFirstChild("PlayerTycoons")
local PlayerTycoon = nil
local TycoonPos
local TycoonFire

local EventFolder = workspace:FindFirstChild("CurrentEventCollectables")

local dragging
local dragInput
local dragStart
local startPos

local Waypoints
    game.Workspace:WaitForChild("PlayerTycoons")
		for i,v in pairs(PlayerTycoons:GetChildren()) do
			if v.TycoonVals.Owner.Value == Player then
				PlayerTycoon = v
				TycoonPos = PlayerTycoon.Models.Giver.CollectButton.Position
                TycoonFire = PlayerTycoon.Models.Giver.CollectButton
			end
		end
function GetClosestTarget(Position, Distance)
    local Target = nil
    local TargetPosition = nil
    
    local PartsInRadius = workspace:GetPartBoundsInRadius(Position, Distance)
    
    for i, v in pairs(PartsInRadius) do
        if v.Parent:FindFirstChildOfClass("Humanoid") ~= nil then
            print("A")
            local vHumanoid = v.Parent:FindFirstChildOfClass("Humanoid")
            
            if v.Parent ~= nil and vHumanoid ~= Player.Character.Humanoid and v.Parent.Name ~= "Worker" and v.Parent.Name ~= "Statue" and v.Parent.Name ~= "AISoldier" and v.Parent.Name ~= "Soldier1" and v.Parent.Name ~= "Animated" then
                
                if Target == nil then
                    Target = v.Parent
                    TargetPosition = v.Parent.PrimaryPart.Position
                end
                
                if (Position - v.Parent.PrimaryPart.Position).Magnitude < (TargetPosition - Position).Magnitude then
                    Target = v.Parent
                    TargetPosition = v.Parent.PrimaryPart.Position
                end
            end
        end
    end
    
    return Target
end

local function update(input)
	local delta = input.Position - dragStart
	gui.Parent.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

function fireproximityprompt(Obj, Amount, Skip) if Obj.ClassName == "ProximityPrompt" then Amount = Amount or 1 local PromptTime = Obj.HoldDuration if Skip then Obj.HoldDuration = 0 end for i = 1, Amount do Obj:InputHoldBegin() if not Skip then wait(Obj.HoldDuration) end Obj:InputHoldEnd() end Obj.HoldDuration = PromptTime else error("userdata<ProximityPrompt> expected") end end

function GoToPoint(StartPlot, EndPlot, Distance, StepCooldown)
    local NewDist = Distance
    local PreviousPos = StartPlot
    
    while character.PrimaryPart.Position ~= EndPlot do
        local Direction = (character:WaitForChild("HumanoidRootPart").Position - EndPlot).Unit * -1
        
        if (character:WaitForChild("HumanoidRootPart").Position + Direction * NewDist - EndPlot).Magnitude < NewDist then
            character:MoveTo(EndPlot)
            break
        end
        
        character:MoveTo(character:WaitForChild("HumanoidRootPart").Position + Direction * NewDist)
        
        if (PreviousPos - character:WaitForChild("HumanoidRootPart").Position).Magnitude < Distance / 4 then
            NewDist = NewDist + 10
        else
            NewDist = Distance
        end
        
        PreviousPos = character:WaitForChild("HumanoidRootPart").Position
        
        wait(StepCooldown)
    end
end
	function tween(cframe)
	local CFrameEnd = CFrame.new(cframe)
	local tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,
    TweenInfo.new(Time), {CFrame = CFrameEnd}) tween:Play() tween.Completed:Wait()
	end
	function bustinbank()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Bank.BankMission.Stages["1"].C4Door.C4.CFrame
	fireproximityprompt(workspace.Bank.BankMission.Stages["1"].C4Door.C4.ProximityPrompt,1,true)
	end
	function enableelevators()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Bank.BankMission.Stages["2"].Elevator.ActivateMain.CFrame
	fireproximityprompt(workspace.Bank.BankMission.Stages["2"].Elevator.ActivateMain.ProximityPrompt,1,true)
	end
function tptovault()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Bank.BankMission.Stages["3"].BankVault.Door.Handle.CFrame
task.wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Bank.BankMission.Stages["3"].BankVault.Door.Handle.CFrame
task.wait(0.1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Bank.BankMission.Stages["3"].BankVault.Door.Handle.CFrame
end
function drillthroughvault()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Bank.BankMission.Stages["3"].BankVault.DrillPart.CFrame
fireproximityprompt(workspace.Bank.BankMission.Stages["3"].BankVault.DrillPart.ProximityPrompt,1,true)
end
local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'Military Tycoon (nullisgangster)',
    Center = true, 
    AutoShow = true,
})
local Tabs = {
    AutoFarm = Window:AddTab('AutoFarm'), 
    Combat = Window:AddTab('Combat'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}
local TabBox = Tabs.AutoFarm:AddLeftTabbox() -- Add Tabbox on left side
local TabBox2 = Tabs.Combat:AddLeftTabbox()
local Tab1 = TabBox:AddTab('Base Farm')
local Tab2 = TabBox:AddTab('Crate/Event Farm')
local Tab3 = TabBox2:AddTab('KillAura')

Tab1:AddToggle('Auto Buy', {
    Text = 'Auto Buy',
    Default = false, -- Default value (true / false)
    Tooltip = 'Buys Everything Possible In Base.', -- Information shown when you hover over the toggle
    Callback = function(Value)
    _G.AutoBuy = Value
if not PlayerTycoon:FindFirstChild("ButtonFolder") then
PlayerTycoon:WaitForChild("ButtonFolder")
end
	while _G.AutoBuy do
	    for i,v in pairs(PlayerTycoon.ButtonFolder:GetDescendants()) do
	   if v:IsA("TouchTransmitter") and v.Parent.Parent.Button.BrickColor == BrickColor.new("Sea green") then
	       firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,v.Parent,0)
	       firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,v.Parent,1)
		task.wait(0.1)
	    end
	    end
	    task.wait(.25)
end
    end
})
Tab1:AddToggle('Auto Collect', {
    Text = 'Auto Collect',
    Default = false, -- Default value (true / false)
    Tooltip = 'Automatically Collects Money.', -- Information shown when you hover over the toggle
    Callback = function(Value)
    _G.AutoCollect = Value
if not PlayerTycoon:FindFirstChild("ButtonFolder") then
PlayerTycoon:WaitForChild("ButtonFolder")
end
	while _G.AutoCollect and CrateFound ~= true do
firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,TycoonFire,0)
firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,TycoonFire,1)
task.wait(0.1)
	end
    end
})
Tab1:AddToggle('Auto Rebirth', {
    Text = 'Auto Rebirth',
    Default = false, -- Default value (true / false)
    Tooltip = 'Automatically Rebirths When Possible.', -- Information shown when you hover over the toggle
    Callback = function(Value)
    _G.AutoRebirth = Value
    if not PlayerTycoon:FindFirstChild("ButtonFolder") then
PlayerTycoon:WaitForChild("ButtonFolder")
end
	while _G.AutoRebirth do
		game:GetService("ReplicatedStorage").LocalRebirth:FireServer()
		wait(5)
	end
    end
})
Tab2:AddToggle('Auto Crate Farm', {
    Text = 'Auto Crate Farm',
    Default = false, -- Default value (true / false)
    Tooltip = 'Automatically Waits For Crates And Teleports To Them.', -- Information shown when you hover over the toggle
    Callback = function(Value)
    _G.AutoCrate = Value
    if not PlayerTycoon:FindFirstChild("ButtonFolder") then
PlayerTycoon:WaitForChild("ButtonFolder")
end
if _G.AutoCrate then
	while _G.AutoCrate do
		if CrateFound then

			GoToPoint(character.PrimaryPart.Position,CratePos.Position + Vector3.new(0,20,0),40,0.15)

			wait(32.5)

			CrateFound = false
		else

        GoToPoint(character.PrimaryPart.Position,TycoonPos,40,0.15)

			for i,v in pairs(workspace:GetChildren())do
				if v.Name == "Crate" and v:FindFirstChild("Main") ~= nil and CratePos ~= v.Main then

					CrateFound = true
					CratePos = v.Main
				end
			end
			wait(2.5)
		end

		wait(5)
	end
    end
    end
})
Tab2:AddToggle('Auto Event Farm', {
    Text = 'Auto Event Farm',
    Default = false, -- Default value (true / false)
    Tooltip = 'Automatically Farms Any Running Events. (can be buggy)', -- Information shown when you hover over the toggle
    Callback = function(Value)
    _G.AutoEvent = Value
    if not PlayerTycoon:FindFirstChild("ButtonFolder") then
PlayerTycoon:WaitForChild("ButtonFolder")
end
if _G.AutoEvent then
local hitbox1 = "Hitbox" or "hitbox"
	while _G.AutoFarmEvent do
		for i,v in pairs(EventFolder:GetChildren()) do
			if v ~= nil and v:FindFirstChild(hitbox1) ~= nil and v[hitbox1]:FindFirstChild("ProximityPrompt") ~= nil then
				while v:FindFirstChild(hitbox1) ~= nil and v[hitbox1]:FindFirstChild("ProximityPrompt") ~= nil do
					if v:FindFirstChild(hitbox1) ~= nil and (v[hitbox1].Position-character.PrimaryPart.Position).Magnitude > 10 then
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v[hitbox1].CFrame
					end
					wait(0.1)
					fireproximityprompt(v[hitbox1]:FindFirstChild("ProximityPrompt"),1,false)
					wait(0.1)
				end
			end
		end
		wait(1)
	end
    end
    end
})
Tab2:AddToggle('Auto Rob Bank', {
    Text = 'Auto Rob Bank',
    Default = false, -- Default value (true / false)
    Tooltip = 'Dont turn it off until its fully completed or its stuck. (Buggy)', -- Information shown when you hover over the toggle
    Callback = function(Value)
        if not PlayerTycoon:FindFirstChild("ButtonFolder") then
PlayerTycoon:WaitForChild("ButtonFolder")
end
	_G.BankRob = Value
    if _G.BankRob then
local Time = 3
	GoToPoint(character.HumanoidRootPart.Position,Vector3.new(-578, 122, -384),40,0.15)
	wait(0.5)
	if workspace.Bank.BankMission.Stages["1"].C4Door:FindFirstChild("C4"):FindFirstChild("ProximityPrompt") then
repeat bustinbank() task.wait(0.1) until workspace.Bank.BankMission.Stages["1"].C4Door.C4:FindFirstChild("ProximityPrompt") == nil
end
wait(1.5)
GoToPoint(character.HumanoidRootPart.Position,workspace.Bank.BankMission.Stages["3"].BankVault.Door.Handle.Position,50,0.15)
wait(1)
tptovault()
wait(1)
while _G.BankRob do
    local moneyChildren = workspace.Bank.BankMission.Money:GetChildren()
        for i,v in pairs(workspace.BankModel:GetDescendants()) do
        if v:FindFirstChild("HackAttachment") and v.BrickColor == BrickColor.new("Forest green") then
        if v.HackAttachment:FindFirstChild("ProximityPrompt") then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            task.wait(0.15)
			if v == nil then
			GoToPoint(character.PrimaryPart.Position, TycoonPos, 40, 0.15)
			end
            fireproximityprompt(v.HackAttachment.ProximityPrompt, 1, true)
			task.wait(0.1)
            end
        end
    end
    for i,v in ipairs(moneyChildren) do
        if v:FindFirstChild("Main") then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v:WaitForChild("Main").CFrame
            task.wait(0.15)
			if v:FindFirstChild("Main") == nil then
			GoToPoint(character.PrimaryPart.Position, TycoonPos, 40, 0.15)
			end
            fireproximityprompt(v.Main.HackAttachment.ProximityPrompt, 1, true)
			task.wait(0.1)
        end
    end
end
firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,TycoonFire,0)
firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,TycoonFire,1)
end
end
})
Tab3:AddToggle('KillAura', {
    Text = 'Kill Aura',
    Default = false, -- Default value (true / false)
    Tooltip = 'Toggles Kill Aura. (REQUIRES MINIGUN)', -- Information shown when you hover over the toggle
    Callback = function(Value)
_G.KillAura = Value
    if not PlayerTycoon:FindFirstChild("ButtonFolder") then
PlayerTycoon:WaitForChild("ButtonFolder")
end
while _G.KillAura do
if game.Players.LocalPlayer.Character:FindFirstChild("Minigun") == nil then
local args = {
    [1] = "Minigun"
}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_knit@1.5.1"):WaitForChild("knit"):WaitForChild("Services"):WaitForChild("InventoryService"):WaitForChild("RF"):WaitForChild("Equip"):InvokeServer(unpack(args))
game.Players.LocalPlayer.Backpack:WaitForChild("Minigun").Parent = game.Players.LocalPlayer.Character
end
if _G.KillAll then
for i,v in game.Players:GetChildren() do
if v.Character ~= nil and v.Character ~= game.Players.LocalPlayer.Character and v.Character:FindFirstChild("ForceField") == nil and v.Character:FindFirstChild("Torso") then
local args = {
    [1] = {
        [1] = Vector3.new(495.13458251953125, 124.51708984375, -2586.7265625)
    },
    [2] = {
        [1] = Vector3.new(479.706298828125, 126.1406021118164, -2554.492919921875)
    },
    [3] = {
        [1] = v.Character.Torso
    },
    [4] = {
        [1] = Vector3.new(495.13458251953125, 124.51708984375, -2586.7265625)
    },
    [5] = {
        [1] = Vector3.new(0.26761069893836975, 0.14189189672470093, 0.9530222415924072)
    },
    [6] = {
        [1] = Enum.Material.Plastic
    }
}
game:GetService("ReplicatedStorage").Events.ShootEvent:FireServer(unpack(args))
task.wait()
end
end
for i,v in game.Workspace.Characters:GetChildren() do
if string.match(v.Name, "Drone") then
v:Destroy()
else
if v:FindFirstChild("HumanoidRootPart") then
local args = {
    [1] = {
        [1] = Vector3.new(495.13458251953125, 124.51708984375, -2586.7265625)
    },
    [2] = {
        [1] = Vector3.new(479.706298828125, 126.1406021118164, -2554.492919921875)
    },
    [3] = {
        [1] = v.HumanoidRootPart
    },
    [4] = {
        [1] = Vector3.new(495.13458251953125, 124.51708984375, -2586.7265625)
    },
    [5] = {
        [1] = Vector3.new(0.26761069893836975, 0.14189189672470093, 0.9530222415924072)
    },
    [6] = {
        [1] = Enum.Material.Plastic
    }
}
game:GetService("ReplicatedStorage").Events.ShootEvent:FireServer(unpack(args))
task.wait()
end
end
end
elseif _G.KillNpcs then
for i,v in game.Workspace.Characters:GetChildren() do
if string.match(v.Name, "Drone") then
v:Destroy()
else
if v:FindFirstChild("HumanoidRootPart") then
local args = {
    [1] = {
        [1] = Vector3.new(495.13458251953125, 124.51708984375, -2586.7265625)
    },
    [2] = {
        [1] = Vector3.new(479.706298828125, 126.1406021118164, -2554.492919921875)
    },
    [3] = {
        [1] = v.HumanoidRootPart
    },
    [4] = {
        [1] = Vector3.new(495.13458251953125, 124.51708984375, -2586.7265625)
    },
    [5] = {
        [1] = Vector3.new(0.26761069893836975, 0.14189189672470093, 0.9530222415924072)
    },
    [6] = {
        [1] = Enum.Material.Plastic
    }
}
game:GetService("ReplicatedStorage").Events.ShootEvent:FireServer(unpack(args))
task.wait()
end
end
end
elseif _G.KillPlayers then
for i,v in game.Players:GetChildren() do
if v.Character ~= nil and v.Character ~= game.Players.LocalPlayer.Character and v.Character:FindFirstChild("ForceField") == nil and v.Character:FindFirstChild("Torso") then
local args = {
    [1] = {
        [1] = Vector3.new(495.13458251953125, 124.51708984375, -2586.7265625)
    },
    [2] = {
        [1] = Vector3.new(479.706298828125, 126.1406021118164, -2554.492919921875)
    },
    [3] = {
        [1] = v.Character.Torso
    },
    [4] = {
        [1] = Vector3.new(495.13458251953125, 124.51708984375, -2586.7265625)
    },
    [5] = {
        [1] = Vector3.new(0.26761069893836975, 0.14189189672470093, 0.9530222415924072)
    },
    [6] = {
        [1] = Enum.Material.Plastic
    }
}
game:GetService("ReplicatedStorage").Events.ShootEvent:FireServer(unpack(args))
task.wait()
end
end
end
if game.Players.LocalPlayer.Character.Minigun.Ammo.Value <= 10 then
local args = {
    [1] = 12
}

game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_knit@1.5.1"):WaitForChild("knit"):WaitForChild("Services"):WaitForChild("InventoryService"):WaitForChild("RF"):WaitForChild("UnequipSlot"):InvokeServer(unpack(args))
end
task.wait()
end
    end
})
Tab3:AddDropdown('KillAuraMethod', {
    Values = { 'Players', 'Npcs', 'Both' },
    Default = 4, -- number index of the value / string
    Multi = false, -- true / false, allows multiple choices to be selected

    Text = 'Kill Aura Method',
    Tooltip = 'Who The Kill Aura Targets.', -- Information shown when you hover over the dropdown

    Callback = function(Value)
if Value == "Players" then
_G.KillPlayers = true
_G.KillNpcs = false
_G.KillAll = false
elseif Value == "Npcs" then
_G.KillPlayers = false
_G.KillNpcs = true
_G.KillAll = false
elseif Value == "Both" then
_G.KillPlayers = false
_G.KillNpcs = false
_G.KillAll = true
end
print(Value)
    end
})
local FrameTimer = tick()
local FrameCounter = 0;
Library:OnUnload(function()
    print('Unloaded!')
    Library.Unloaded = true
end)

-- UI Settings
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' })

Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- ThemeManager (Allows you to have a menu theme system)

-- Hand the library over to our managers
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- Adds our MenuKeybind to the ignore list
-- (do you want each config to have a different menu key? probably not.)
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
ThemeManager:SetFolder('NullHub')
SaveManager:SetFolder('NullHub/Military-Tycoon')

-- Builds our config menu on the right side of our tab
SaveManager:BuildConfigSection(Tabs['UI Settings'])

-- Builds our theme menu (with plenty of built in themes) on the left side
-- NOTE: you can also call ThemeManager:ApplyToGroupbox to add it to a specific groupbox
ThemeManager:ApplyToTab(Tabs['UI Settings'])

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
